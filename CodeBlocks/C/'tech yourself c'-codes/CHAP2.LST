listing 1
if(10 > 9) printf("true");

listing 2
if(5 > 9) printf("this will not print");

listing 3
#include <stdio.h>

int main(void)
{
  int num;

  printf("Enter an integer: ");
  scanf("%d", &num);

  if(num < 0) printf("Number is negative.");
  if(num > -1) printf("Number is non-negative.");

  return 0;
}

listing 4
if(count+1) printf("Not Zero");

listing 5
#include <stdio.h>

int main(void)
{
  int answer;

  printf("What is 10 + 14? ");
  scanf("%d", &answer);
  if(answer == 10+14) printf("Right!");

  return 0;
}

listing 6
#include <stdio.h>

int main(void)
{
  float num;
  int choice;

  printf("Enter value: ");
  scanf("%f", &num);

  printf("1: Feet to Meters, 2: Meters to Feet. ");
  printf("Enter choice: ");
  scanf("%d", &choice);

  if(choice == 1) printf("%f", num / 3.28);
  if(choice == 2) printf("%f", num * 3.28);

  return 0;
}

listing 7
#include <stdio.h>

int main(void)
{
  int num;

  printf("Enter an integer: ");
  scanf("%d", &num);

  if(num < 0) printf("Number is negative.");
  else printf("Number is non-negative.");

  return 0;
}

listing 8
#include <stdio.h>

int main(void)
{
  int num1, num2;

  printf("Enter first number: ");
  scanf("%d", &num1);

  printf("Enter second number: ");
  scanf("%d", &num2);

  if(num2 == 0) printf("Cannot divide by zero.");
  else printf("Answer is: %d.", num1 / num2);

  return 0;
}

listing 9
scanf("%d", &num);

if(num > 0) {
  printf("This is ");
  printf("an example of ");
  printf("a code block.");
}

listing 10
#include <stdio.h>

int main(void)
{
  float num;
  int choice;

  printf("1: Feet to Meters, 2: Meters to Feet. ");
  printf("Enter choice: ");
  scanf("%d", &choice);

  if(choice == 1) {
    printf("Enter number of feet: ");
    scanf("%f", &num);
    printf("Meters: %f", num / 3.28);
  }
  else {
    printf("Enter number of meters: ");
    scanf("%f", &num);
    printf("Feet: %f", num * 3.28);
  }

  return 0;
}

listing 11
#include <stdio.h>

int main(void)
{
  int answer;

  printf("What is 10 + 14? ");
  scanf("%d", &answer);

  if(answer == 10+14) printf("Right!");
  else {
    printf("Sorry, you're wrong. ");
    printf("The answer is 24.");
  }

  return 0;
}

listing 12
if(count < 100)
  printf("Number is less than 100.");
  printf("Its square is %d.", count * count);
}

listing 13
#include <stdio.h>

int main(void)
{
  int num;

  for(num=1; num<11; num=num+1) printf("%d ", num);
  printf("terminating");

  return 0;
}

listing 14
#include <stdio.h>

int main(void)
{
  int num;

  /* this loop will not execute */
  for(num=11; num<11; num=num+1) printf("%d ", num);

  printf("terminating");

  return 0;
}

listing 15
#include <stdio.h>

int main(void)
{
  int num, sum, prod;

  sum = 0;
  prod = 1;

  for(num=1; num<6; num=num+1) {
    sum = sum + num;
    prod = prod * num;
  }
  printf("product and sum: %d %d", prod, sum);

  return 0;
}

listing 16
for(num=20; num>0; num=num-1) . . .

listing 17
#include <stdio.h>

int main(void)
{
  int i;

  for(i=0; i<101; i=i+5) printf("%d ", i);

  return 0;
}

listing 18
#include <stdio.h>

int main(void)
{
  int answer, count;

  for(count=1; count<11; count=count+1) {
    printf("What is %d + %d? ", count, count);
    scanf("%d", &answer);

    if(answer == count+count) printf("Right! ");
    else {
      printf("Sorry, you're wrong. ");
      printf("The answer is %d. ", count+count);
    }
  }

  return 0;
}

listing 19
/* Prime number tester. */
#include <stdio.h>

int main(void)
{
  int num, i, is_prime;

  printf("Enter the number to test: ");
  scanf("%d", &num);

  /* now test for factors */
  is_prime = 1;
  for(i=2; i<=num/2; i=i+1)
    if((num%i)==0) is_prime = 0;

  if(is_prime==1) printf("The number is prime.");
  else printf("The number is not prime.");

  return 0;
}

listing 20
for(num=0; num<some_value; num=num+1) . . .

listing 21
i = i + 1;

listing 22
i++;

listing 23
for(num=0; num<some_value; num++) . . .

listing 24
count = count - 1;

listing 25
count--;

listing 26
#include <stdio.h>

int main(void)
{
  int i, j;

  i = 10;
  j = i++;

  /* this will print 11 10 */
  printf("i and j: %d %d", i, j);

  return 0;
}

listing 27
count = 10 * max++;

listing 28
#include <stdio.h>

int main(void)
{
  int i, j;

  i = 10;
  j = ++i;

  /* this will print 11 11 */
  printf("i and j: %d %d", i, j);

  return 0;
}

listing 29
#include <stdio.h>

int main(void)
{
  int answer, count;

  for(count=1; count<11; count++) {
    printf("What is %d + %d? ", count, count);
    scanf("%d", &answer);

    if(answer == count+count) printf("Right! ");
    else {
      printf("Sorry, you're wrong. ");
      printf("The answer is %d. ", count+count);
    }
  }

  return 0;
}

listing 30
#include <stdio.h>

int main(void)
{
  int i;

  i = 0;

  i++;
  printf("%d ", i); /* prints 1 */
  i--;
  printf("%d ", i); /* prints 0 */

  return 0;
}

listing 31
#include <stdio.h>

int main(void)
{
  int a, b;

  a = 1;

  a = a + 1;

  b = a;

  b = b - 1;

  printf("%d %d", a, b);

  return 0;
}

listing 32
#include <stdio.h>

int main(void)
{
  printf("This is line one.\n");
  printf("This is line two.\n");
  printf("This is line three.");

  return 0;
}

listing 33
char ch;

ch = '\t'; /* assign ch the tab character */

listing 34
#include <stdio.h>

int main(void)
{
  printf("\a");

  return 0;
}

listing 35
#include <stdio.h>

int main(void)
{
  printf("\xA0 \xA1 \xA2 \xA3");

  return 0;
}

listing 36
#include <stdio.h>

int main(void)
{
  printf("one\ntwo\nthree\nfour");

  return 0;
}

listing 37
10 + count > a + 12 

listing 38
(10 + count) > (a + 12)

listing 39
var > max || !(max==100) && 0 <= item

listing 40
if(a>0 && b>0) printf("Both are positive.");

listing 41
if(count != 0) . . .

listing 42
if(count) . . .

listing 43
if(count == 0) . . .

listing 44
if(!count) . . .

listing 45
#include <stdio.h>

int main(void)
{
  int i, j;

  printf("Enter first number: ");
  scanf("%d", &i);
  printf("Enter second number: ");
  scanf("%d", &j);

  /* relational operations */
  printf("i < j %d\n", i < j);
  printf("i <= j %d\n", i <= j);
  printf("i == j %d\n", i == j);
  printf("i > j %d\n", i > j);
  printf("i >= j %d\n", i >= j);

  /* logical operations */
  printf("i && j %d\n", i && j);
  printf("i || j %d\n", i || j);
  printf("!i !j %d %d\n", !i, !j);

  return 0;
}

listing 46
int xor(int a, int b)
{
  return (a || b) && !(a && b);
}

listing 47
/* This program demonstrates the xor() function. */
#include <stdio.h>

int xor(int a, int b);

int main(void)
{
  int p, q;

  printf("enter P (0 or 1): ");
  scanf("%d", &p);
  printf("enter Q (0 or 1): ");
  scanf("%d", &q);
  printf("P AND Q: %d\n", p && q);
  printf("P OR Q: %d\n", p || q);
  printf("P XOR Q: %d\n", xor(p, q));

  return 0;
}

int xor(int a, int b)
{
  return (a || b) && !(a && b);
}

listing 48
for(x=0; x<100; x++) printf("%d ", x);

listing 49
!(10==9)

